#
# alle Beispiele anhand der Sakila DB

MySQL nutzt per Default b-Tree Indices

#1 normaler Index "Equal Operation"

explain select * from film where title = 'SPEED SUIT';
+----+-------------+-------+------------+------+---------------+-----------+---------+-------+------+----------+-------+
| id | select_type | table | partitions | type | possible_keys | key       | key_len | ref   | rows | filtered | Extra |
+----+-------------+-------+------------+------+---------------+-----------+---------+-------+------+----------+-------+
|  1 | SIMPLE      | film  | NULL       | ref  | idx_title     | idx_title | 767     | const |    1 |   100.00 | NULL  |
+----+-------------+-------+------------+------+---------------+-----------+---------+-------+------+----------+-------+

Index sehr lang (später zeigen, dass man die verkürzen kann)

SELECT Indexgröße

SELECT INDEX_NAME, COUNT(*) AS Pages,
       ROUND(SUM(IF(COMPRESSED_SIZE = 0, @@GLOBAL.innodb_page_size, COMPRESSED_SIZE))/1024)
       AS 'Total Data (KB)'
       FROM INFORMATION_SCHEMA.INNODB_BUFFER_PAGE
       WHERE INDEX_NAME='idx_title' AND TABLE_NAME = '`sakila`.`film`';



#2 normaler Index "Range Operation"
explain select title from film where length between 90 and 120;
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
|  1 | SIMPLE      | film  | NULL       | ALL  | NULL          | NULL | NULL    | NULL | 1000 |    11.11 | Using where |
+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
1 row in set, 1 warning (0,02 sec)

==> kein Index da

mysql> create index film_length on film (length);
Query OK, 0 rows affected (0,41 sec)

mysql> explain select title from film where length between 90 and 120\G
*************************** 1. row ***************************
           id: 1
  select_type: SIMPLE
        table: film
   partitions: NULL
         type: range
possible_keys: film_length
          key: film_length
      key_len: 3
          ref: NULL
         rows: 223
     filtered: 100.00
        Extra: Using index condition
        
#3 Comninded Index
mysql> create index film_title_length on film(title, length);

mysql> explain select * from film where title='SPEED SUIT' and length=124\G
*************************** 1. row ***************************
           id: 1
  select_type: SIMPLE
        table: film
   partitions: NULL
         type: ref
possible_keys: idx_title,film_length,film_title_length
          key: idx_title
      key_len: 767
          ref: const
         rows: 1
     filtered: 5.00
        Extra: Using where
        
#4 Covered Index
Vorbereitung
mysql> drop index idx_title on film;

mysql> explain select title,length from film where title='SPEED SUIT' and length=124\G
*************************** 1. row ***************************
           id: 1
  select_type: SIMPLE
        table: film
   partitions: NULL
         type: ref
possible_keys: film_length,film_title_length
          key: film_title_length
      key_len: 770
          ref: const,const
         rows: 1
     filtered: 100.00
        Extra: Using index
        
==> Using index = Tabelle wird gar nicht mehr genutzt


