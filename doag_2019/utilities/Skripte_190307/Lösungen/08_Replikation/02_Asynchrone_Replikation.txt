#
# Matthias Jung, Raphael Salguero / ORDIX AG
#

Bereiten Sie den neuen Datenbank-Server (fortan Slave genannt) für eine asynchrone Replikation vor.
Stellen Sie dafür folgendes Sicher:

Master:
  - Replikationsbenutzer erstellen
  - Binary-Log aktivieren
  - Server ID in der Konfigurations-Datei setzen
  - SYNC-BINLOG aktivieren (=1)

Slave: 
  - Server ID in der Konfigurations-Datei setzen
  - Relay-Log auf Relay-Log des Masters setzen
  - Importieren Sie ein Backup des Masters auf dem Slave

Starten Sie nun die asynchrone Replikation über den "change master"-Befehl, starten Sie den Slave und schauen Sie sich den Status an.
Führen Sie anschließend Transkationen (z.B. durch das Transaktions-Skript) auf dem Master durch und prüfen Sie die Änderungen auf dem Slave.

Untersuchen Sie parallel dazu den Slave Status und identifizieren Sie die relevanten Informationen für die Replikation der Transaktionen.

Stellen Sie ein SQL-Delay von 30 Sekunden auf dem Slave ein und testen Sie das Delay mittels eines 'create database'-Befehls. (Befehl: change master to master_delay=30)
 
## Lösung

# Backup des Masters
[root@vm132 backups]# mysqldump --all-databases --allow-keywords --single-transaction --flush-logs --master-data=2 -r /mysql/backups/mysqldump.sql

# Einspielen auf dem Slave
root@(none)>source /mysql/backups/mysqldump.sql

# Replikations-Benutzer auf dem Master
root@(none)>create user 'repl'@'172.17.10.232' identified by 'password';
Query OK, 0 rows affected (0,48 sec)

root@(none)>GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'repl'@'172.17.10.232';
Query OK, 0 rows affected (0,05 sec)

# Abfrage der aktuellen Binary-Log Position auf dem Master
root@(none)>show master status;
+--------------------+----------+--------------+------------------+--------------------------------------------+
| File               | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                          |
+--------------------+----------+--------------+------------------+--------------------------------------------+
| server_3306.000016 |      745 |              |                  | 206244dc-4402-11e9-8d1b-005056123201:1-220 |
+--------------------+----------+--------------+------------------+--------------------------------------------+
1 row in set (0,17 sec)

root@(none)>change master to master_host='172.17.10.232', master_user='repl', master_password='password', master_log_file='server_3306.000016', master_log_pos=745;

# Abfrage der Slave-Konfiguration
root@(none)>show slave status \G
*************************** 1. row ***************************
               Slave_IO_State:
                  Master_Host: 172.17.10.232
                  Master_User: repl
                  Master_Port: 3306
                Connect_Retry: 60
              Master_Log_File: server_3306.000016
          Read_Master_Log_Pos: 745
               Relay_Log_File: vm132-relay-bin.000001
                Relay_Log_Pos: 4
        Relay_Master_Log_File: server_3306.000016
             Slave_IO_Running: No
            Slave_SQL_Running: No
              Replicate_Do_DB:
              ..

# Starten des Slaves
root@(none)>start slave;
Query OK, 0 rows affected (0,12 sec)

root@(none)>stop slave;
Query OK, 0 rows affected (0,03 sec)

root@(none)>change master to master_delay=30;
Query OK, 0 rows affected (0,11 sec)

root@(none)>start slave;
Query OK, 0 rows affected (0,06 sec)

root@(none)>show slave status \G
*************************** 1. row ***************************
               Slave_IO_State: Waiting for master to send event
                  Master_Host: 172.17.10.232
                  Master_User: repl
                  Master_Port: 3306
                Connect_Retry: 60
                ..
                ..
                SQL_Delay: 30
          SQL_Remaining_Delay: NULL
      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates
           Master_Retry_Count: 86400
                  Master_Bind:
                ..
                ..



