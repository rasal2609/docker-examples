#
# Matthias Jung, Raphael Salguero / ORDIX AG
#

Fügen Sie Datensätze zur Tabelle sakila.rental hinzu und suchen Sie im entsprechenden Binary-Log nach diesen Transaktionen. (Hinweis: mysqlbinlog --verbose)
Untersuchen Sie nun den mysqldump Client nach einer Möglichkeit, die zuvor getätigten Transaktionen in ein SQL-File ausgeben zu lassen.

Führen Sie nun das Skript unter /home/ordix/Skripte/06_Backup/transaktionen.sh aus. 
 - Was passiert durch die Ausführung des Skriptes?
 - Wo ist der Unterschied zu den manuellen Transaktionen zuvor?

Suchen Sie nun erneut den Startpunkt der Transaktionen aus dem Skript und lassen Sie sich via mysqldump das SQL-File für diese Transaktionen ausgeben. (Hinweis: Transaktionen liegen in mehreren Binary-Logs)

## Lösung

insert into sakila.rental(rental_date, inventory_id, customer_id, return_date, staff_id) values (sysdate(), 1000, 100, sysdate()+3, 1);
insert into sakila.rental(rental_date, inventory_id, customer_id, return_date, staff_id) values (sysdate(), 2000, 200, sysdate()+3, 1);
insert into sakila.rental(rental_date, inventory_id, customer_id, return_date, staff_id) values (sysdate(), 3000, 300, sysdate()+3, 2);
insert into sakila.rental(rental_date, inventory_id, customer_id, return_date, staff_id) values (sysdate(), 4000, 400, sysdate()+3, 2);

# Gesamte Ausgabe des aktuellen Binary-Logs für die Sakila-DB
mysqlbinlog --verbose -d sakila server_3306.000004 > output.txt 

# Einschränkung auf die getätigten Transatkionen
mysqlbinlog --verbose -d sakila server_3306.000004 --start-position=1072509 > transactions.sql

# Verwendung mehrerer Binary-Logs
[root@vm132 3306]# mysqlbinlog --verbose -d sakila server_3306.000006 server_3306.000007 server_3306.000008 server_3306.000009 --start-position=191 > transaktionen.sql
